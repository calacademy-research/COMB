
    model{
    
    # COMMUNITY hyperpriors 
    omega ~ dunif(0,1) # best practices suggested by Guillera-Arroita et al 2018 suggest dbeta(0.001,0)) but this doesnt work for me
    
    u.mean ~ dunif(0,1) # Mike Meredith whoever he is prefers dbeta(1,1) to dunif(0,1) for uniform priors
    mu.u <- log(u.mean) - log(1-u.mean) # no idea why this is the way it is
    tau.u ~ dgamma(0.1, 0.1) # Mike Meredith also hates gamma distributions for tau...
    
    v.mean ~ dunif(0,1)
    mu.v <- log(v.mean) - log(1-v.mean) 
    tau.v ~ dgamma(0.1, 0.1) 
    
    # community-level priors for each of the explanatory variables
    mu.aD ~ dnorm(0, 0.001)    
    mu.aT ~ dnorm(0,0.001)
    mu.bHt ~ dnorm(0, 0.001)
    mu.bEl ~ dnorm(0,0.001)


    tau.aD ~ dgamma(0.1,0.1)
    tau.aT ~ dgamma(0.1,0.1)
    tau.bHt ~ dgamma(0.1,0.1) 
    tau.bEl ~ dgamma(0.1,0.1) 


    
    for (i in 1:N) {   # loop over species (N)
    
    w[i] ~ dbern(omega) # community-level hyperprior (draw from omega)
    u[i] ~ dnorm(mu.u, tau.u) # occurrence process intercept
    v[i] ~ dnorm(mu.v, tau.v) # detection process intercept
    
    # DETECTION process
    aDay[i] ~ dnorm(mu.aD, tau.aD)
    aTime[i] ~ dnorm(mu.aT, tau.aT)
    # OCCURRENCE process
    bHt[i] ~ dnorm(mu.bHt, tau.bHt)
    bEl[i] ~ dnorm(mu.bEl, tau.bEl)

    
    for (j in 1:J){   #loop over j sites 
    z[j,i] ~ dbern(mu.psi[j,i]) #state model
    logit(psi[j,i]) <- u[i] + bHt[i]*Height[j] + bEl[i]*Elev[j] 
    mu.psi[j,i] <- psi[j,i] * w[i]   
    
    for (k in 1:K[j]) {  #loop over k visits at each point j
    y[j,k,i] ~ dbern(mu.p[j,k,i]) # detection model 
    mu.p[j,k,i] <- p[j,k,i] * z[j,i]
    logit(p[j,k,i]) <- v[i] + aDay[i]*JDay[j,k] + aTime[i]*Time[j,k]
    
    } # end of visit loop 
    } # end of site loop
    } # end of species loop
    
    # DERIVED quantities
    for (i in 1:N) {  # for each species i, number of occupied sites 
      Nocc[i] <- sum(z[,i])
    }
    for (j in 1:J) {  # at each site j, number of species present
      Nsite[j] <- sum(z[j,])
    }
    
    
    } # end of model loop
    